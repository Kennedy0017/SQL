-- Data Cleaning World Life Expectancy Data

select * 
FROM world_life_expectancy;

-- Deleting duplicates in the table 

select country, Year, CONCAT(country,Year), COUNT(CONCAT(country,Year))
FROM world_life_expectancy
GROUP BY country, Year, CONCAT(country,Year)
HAVING COUNT(CONCAT(country,Year)) > 1;

Select country, year, row_id
from world_life_expectancy
Where country IN ('Ireland', 'Senegal', 'Zimbabwe');

SELECT *
FROM (
Select row_id, 
CONCAT(country,Year), 
row_number() OVER(Partition By CONCAT(country,Year)  Order By CONCAT(country,Year)) 
as row_num
from world_life_expectancy ) as Row_Table
WHERE row_num > 1
;

DELETE FROM 
world_life_expectancy
WHERE Row_id IN ( SELECT row_id
FROM (
Select row_id, 
CONCAT(country,Year), 
row_number() OVER(Partition By CONCAT(country,Year)  Order By CONCAT(country,Year)) 
as row_num
from world_life_expectancy ) as Row_Table
WHERE row_num > 1
) ;

-- Populating empty values in the 'Status' column 

select * 
FROM world_life_expectancy
WHERE Status = '';

select DISTINCT(Status)
FROM world_life_expectancy
WHERE Status <> '';

SELECT distinct(country)
FROM world_life_expectancy
WHERE Status = 'Developing';



UPDATE world_life_expectancy w1
JOIN world_life_expectancy w2
ON w1.country = w2.country
SET w1.Status = 'Developing'
WHERE w1.Status = ''
AND w2.Status <> ''
AND w2.Status = 'Developing';

UPDATE world_life_expectancy w1
JOIN world_life_expectancy w2
ON w1.country = w2.country
SET w1.Status = 'Developed'
WHERE w1.Status = ''
AND w2.Status <> ''
AND w2.Status = 'Developed';

select * 
FROM world_life_expectancy;

-- Populating empty values in the 'Life Expectancy' column 

Alter table world_life_expectancy
Rename column `Lifeexpectancy` to `Life_expectancy`;

Select country, year, life_expectancy
from world_life_expectancy
WHERE life_expectancy = '';


SELECT t1.country, t1.year, t1.life_expectancy,
t2.country, t2.year, t2.life_expectancy,
t3.country, t3.year, t3.life_expectancy,
ROUND((t2.life_expectancy + t3.life_expectancy)/2,1)
From world_life_expectancy t1
Join world_life_expectancy t2
ON t1.country = t2.country
AND t1.year = t2.year - 1
Join world_life_expectancy t3
ON t1.country = t3.country
AND t1.year = t3.year + 1
WHERE t1.Life_expectancy = '';

UPDATE world_life_expectancy t1
Join world_life_expectancy t2
 ON t1.country = t2.country
 AND t1.year = t2.year - 1
Join world_life_expectancy t3
 ON t1.country = t3.country
 AND t1.year = t3.year + 1
SET t1.life_expectancy = 
ROUND((t2.life_expectancy + t3.life_expectancy)/2,1)
WHERE t1.life_expectancy = ''


-- World Life Expectancy Data Analysis

Select * 
FROM world_life_expectancy;

Select country, MIN(Life_expectancy), 
MAX(Life_expectancy),
ROUND(MAX(Life_expectancy) - MIN(Life_expectancy),1) as Life_Increase
from world_life_expectancy
GROUP BY country
HAVING MIN(Life_expectancy) <> 0 
AND MAX(Life_expectancy) <> 0
ORDER By life_increase desc ;

SELECT year, ROUND(avg(Life_expectancy),2) as avg_life_expectancy
from world_life_expectancy
WHERE life_expectancy <> 0
GROUP BY year
ORDER BY year desc; 

SELECT country, year, AdultMortality,
row_number() OVER(Partition By country Order By adultmortality desc) as row_table
from world_life_expectancy;

SELECT country, year, Life_expectancy, AdultMortality,
SUM(AdultMortality) OVER(Partition By country Order By Year ) as Mortality_Increase
from world_life_expectancy;

SELECT country, ROUND(AVG(Life_expectancy),1) as Life_exp,
ROUND(AVG(GDP),1) as GDP
from world_life_expectancy
Group By country
HAVING Life_exp > 0
AND GDP > 0
ORDER BY GDP desc;


SELECT 
SUM(CASE WHEN GDP >= 1500 THEN 1 ELSE 0 END) as High_Gdp_Count,
AVG(CASE WHEN GDP >= 1500 THEN Life_expectancy ELSE Null END) as High_GDP_Life_Exp,
SUM(CASE WHEN GDP <= 1500 THEN 1 ELSE 0 END) as Low_Gdp_Count,
AVG(CASE WHEN GDP <= 1500 THEN Life_expectancy ELSE Null END) as Low_GDP_Life_Exp
FROM world_life_expectancy;


SELECT Status, ROUND(AVG(Life_expectancy),1)
FROM world_life_expectancy
GROUP BY Status;


SELECT Status, Count(Distinct Country), ROUND(AVG(Life_expectancy),1)
FROM world_life_expectancy
GROUP BY Status;


SELECT country, ROUND(AVG(Life_expectancy),1) as Life_exp,
ROUND(AVG(BMI),1) as BMI
from world_life_expectancy
Group By country
HAVING Life_exp > 0
AND BMI > 0
ORDER BY BMI desc;


  







