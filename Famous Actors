-- Create a table of famous actors and a table with details of popular films
CREATE TABLE Actors(id INTEGER , name Text, age Integer);

CREATE TABLE Releases(id INTEGER, title Text, year_released TEXT, genre Text, creator_id integer);


INSERT INTO Actors VALUES (1, "Tom Cruise", "61");
INSERT INTO Actors VALUES (2, "Matt Damon", "52");
INSERT INTO Actors VALUES (3, "Matthew Mcconaughey", "53");
INSERT INTO Actors VALUES (4, "Robert Downey Jr.", "58");
INSERT INTO Actors VALUES (5, "Anne Hathaway", "40");
INSERT INTO Actors VALUES (6, "Hugh Jackman", "54");
INSERT INTO Actors VALUES (7, "Jake Gyllenhaal", "42");
INSERT INTO Actors VALUES (8, "Chris Evans", "42");

INSERT INTO Releases VALUES (1, "Edge of Tommorow", "2014", "Sci-Fi", "1");
INSERT INTO Releases VALUES (2, "Jason Bourne", "2023", "Drama", "2");
INSERT INTO Releases VALUES (3, "Interstellar", "2014", "Sci-Fi", "3");
INSERT INTO Releases VALUES (4, "Prisoners", "2013", "Thriller", "7");
INSERT INTO Releases VALUES (5, "Avengers", "2012", "Action", "8");
INSERT INTO Releases VALUES (6, "Logan", "2017", "Action", "6");
INSERT INTO Releases VALUES (7, "Dark Waters", "2019", "Drama", "5");
INSERT INTO Releases VALUES (8, "Tropic Thunder", "2008", "Comedy", "4");

-- Grouping the correct actors to the films they have starred in 
SELECT Actors.id, actors.name as Actor, Releases.title as Movie_Title
FROM Actors
JOIN Releases
ON Actors.id = Releases.creator_id;

-- Grouping the films that have been released before 2018 and grouping them by earliest to latest
SELECT Actors.name as Actor, Releases.title as Movie_Title, Releases.year_released
FROM Actors
JOIN Releases
ON Actors.id = Releases.creator_id
GROUP BY Movie_Title
HAVING year_released < 2018
Order By year_released Desc;

-- Finding the average age of the actors
SELECT round(avg(age)) as Avg_Actor_Age
FROM Actors;
